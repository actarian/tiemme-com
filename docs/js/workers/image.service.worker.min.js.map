{"version":3,"sources":["docs/js/workers/image.service.worker.js","../../../src/js/image/image.service.worker.js"],"names":["factory","define","amd","controllers","self","addEventListener","event","id","data","src","options","AbortController","controller","signal","fetch","then","response","blob","postMessage","abort"],"mappings":";;;;;CAMC,SAAUA,GACQ,mBAAXC,QAAyBA,OAAOC,IAAMD,OAAO,uBAAwBD,GAC5EA,IAFD,EAGE,WAAe,aCTjB,IAAMG,EAAc,GAEpBC,KAAKC,iBAAiB,WAAW,SAASC,GACzC,IAAMC,EAAKD,EAAME,KAAKD,GAChBE,EAAMH,EAAME,KAAKC,IACvB,IAAIF,GAAOE,EAAX,CAOA,IAAIC,EACJ,GAAIN,KAAKO,gBAAiB,CACzB,IAAMC,EAAa,IAAID,gBACvBD,EAAU,CACTG,OAAQD,EAAWC,QAEpBV,EAAYI,GAAMK,EAGFE,MAAML,EAAKC,GAC1BK,MAAK,SAASC,GACd,OAAOA,EAASC,UAEhBF,MAAK,SAASE,UACPd,EAAYI,GACnBH,KAAKc,YAAY,CAChBT,IAAKA,EACLQ,KAAMA,WAxBT,CACC,IAAML,EAAaT,EAAYI,GAC3BK,GACHA,EAAWO","file":"docs/js/workers/image.service.worker.min.js","sourcesContent":[null,"const controllers = {};\n\nself.addEventListener(\"message\", function(event) {\n\tconst id = event.data.id;\n\tconst src = event.data.src;\n\tif (id && !src) {\n\t\tconst controller = controllers[id];\n\t\tif (controller) {\n\t\t\tcontroller.abort();\n\t\t}\n\t\treturn;\n\t}\n\tlet options;\n\tif (self.AbortController) {\n\t\tconst controller = new AbortController();\n\t\toptions = {\n\t\t\tsignal: controller.signal,\n\t\t};\n\t\tcontrollers[id] = controller;\n\t}\n\n\tconst response = fetch(src, options)\n\t\t.then(function(response) {\n\t\t\treturn response.blob();\n\t\t})\n\t\t.then(function(blob) {\n\t\t\tdelete controllers[id];\n\t\t\tself.postMessage({\n\t\t\t\tsrc: src,\n\t\t\t\tblob: blob\n\t\t\t});\n\t\t});\n});\n\n/*\nself.addEventListener('message', function(event) {\n\t// console.log(event);\n\tconst src = event.data;\n\tconst response = fetch(src).then(function(response) {\n\t\treturn response.blob();\n\t}).then(function(blob) {\n\t\t// Send the image data to the UI thread!\n\t\tself.postMessage({\n\t\t\tsrc: src,\n\t\t\tblob: blob,\n\t\t});\n\t});\n});\n*/\n"]}